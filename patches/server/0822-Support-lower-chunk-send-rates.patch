From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MartijnMuijsers <martijnmuijsers@live.nl>
Date: Wed, 22 Sep 2021 15:38:51 +0200
Subject: [PATCH] Support lower chunk send rates


diff --git a/src/main/java/io/papermc/paper/chunk/PlayerChunkLoader.java b/src/main/java/io/papermc/paper/chunk/PlayerChunkLoader.java
index 9775d05549bfc6541026dc11e198153b08605149..b05a16ff50e3a5c6780c1c84baf8331e2924ad1c 100644
--- a/src/main/java/io/papermc/paper/chunk/PlayerChunkLoader.java
+++ b/src/main/java/io/papermc/paper/chunk/PlayerChunkLoader.java
@@ -354,7 +354,7 @@ public final class PlayerChunkLoader {
     // Martijn in Paper start - per-player chunk send rate
     public long getTargetSendPerPlayerAddend(ServerPlayer player) { // Martijn - update chunk send deadline based on chunk send rate
         final double chunkSendRate = player.getBukkitEntity().getTargetChunkSendRate();
-        // disable the limit for any given negative rate (with -1 the intended value to denote this)
+        // disable the limit for any given negative rate (with -1 the intended value to denote this, and 0L the appropriate output of this method in that case)
         return chunkSendRate < 0 ? 0L : (long) Math.round(1.0e9 / chunkSendRate);
     }
     // Martijn in Paper end - per-player chunk send rate
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 84f7ab28efc032dedbca7f397aac77b1ad3916fc..d20f7234547163caeb3746fe6b70b46b2dd80d08 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -632,7 +632,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         final Double playerTargetChunkSendRate = this.getHandle().targetChunkSendRate;
         final double effectiveTargetChunkSendRate = playerTargetChunkSendRate == null ? PaperConfig.playerTargetChunkSendRate : playerTargetChunkSendRate;
         // Make sure the returned rate is -1, or >= 1
-        return effectiveTargetChunkSendRate < 0 ? -1 : (effectiveTargetChunkSendRate <= 1 ? 1 : effectiveTargetChunkSendRate);
+        return effectiveTargetChunkSendRate < 0 ? -1 : Math.max(effectiveTargetChunkSendRate, 1.0e-6);
     }
 
     @Override
