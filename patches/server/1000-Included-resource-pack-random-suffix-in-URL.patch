From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MartijnMuijsers <martijnmuijsers@live.nl>
Date: Sun, 3 Jul 2022 14:56:52 +0200
Subject: [PATCH] Included resource pack random suffix in URL


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 3c8c0cc28ab28acc5700fffb9ebd57f898940083..89450e30b34aa8439fef29d27177d6718a200d61 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -604,6 +604,11 @@ public class ServerPlayer extends Player {
     }
 
     public boolean canSendChunkInitializationPacketNow(ChunkPos chunk) {
+        // Martijn start - custom blocks and items
+        if (getBukkitEntity().getResourcePackStatus() == null) {
+            return false;
+        }
+        // Martijn end - custom blocks and items
         if (getChessboardDistanceToChunk(chunk) <= GlobalConfiguration.get().networkConstrainedChunkSending.ignoreNetworkConditionsForChunksWithinChessboardDistance) return true;
         synchronized (this.networkConstrainedSendingLock) {
             return this.chunkInitializationPacketsInTransitKeepaliveIds.size() < this.maxNumberOfChunkPacketsInTransitBasedOnConnection;
diff --git a/src/main/java/nl/martijnmuijsers/paper/resourcepack/httpserver/ResourcePackHTTPServer.java b/src/main/java/nl/martijnmuijsers/paper/resourcepack/httpserver/ResourcePackHTTPServer.java
index 6cc2e9aec629c357ac2fcdc40e2f93c2026077f1..7035f89399196b0a5440c01b7c1ce3d4d106ddf0 100644
--- a/src/main/java/nl/martijnmuijsers/paper/resourcepack/httpserver/ResourcePackHTTPServer.java
+++ b/src/main/java/nl/martijnmuijsers/paper/resourcepack/httpserver/ResourcePackHTTPServer.java
@@ -27,12 +27,11 @@ public final class ResourcePackHTTPServer {
     // Modified for easy testing
     private static final @NotNull String IP = new File("paper_test_server").exists() ? "89.35.34.254" : "sucraft.org";
     private static final int PORT = 25454;
-    private static final @NotNull String PATH = "resourcepack";
+    private static final @NotNull String PATH = "resourcepack-" + CreateSuCraftResourcePack.getOutputFilePathRandomSuffix();
 
     public static final @NotNull String RESOURCE_PACK_URL = PROTOCOL + "://" + IP + ":" + PORT + "/" + PATH;
 
-    private ResourcePackHTTPServer() {
-    }
+    private ResourcePackHTTPServer() {}
 
     private static @Nullable ResourcePackHTTPServer instance;
 
diff --git a/src/main/java/nl/martijnmuijsers/paper/resourcepack/sucraft/CreateSuCraftResourcePack.java b/src/main/java/nl/martijnmuijsers/paper/resourcepack/sucraft/CreateSuCraftResourcePack.java
index a922cefe157d505cb3aab090e885291c9428e639..9ce50547a445a5fb161e0082a373ff1feaad465d 100644
--- a/src/main/java/nl/martijnmuijsers/paper/resourcepack/sucraft/CreateSuCraftResourcePack.java
+++ b/src/main/java/nl/martijnmuijsers/paper/resourcepack/sucraft/CreateSuCraftResourcePack.java
@@ -36,7 +36,7 @@ public final class CreateSuCraftResourcePack {
 
     private CreateSuCraftResourcePack() {}
 
-    private static final int currentResourcePackVersion = 1;
+    private static final int currentResourcePackVersion = 3;
 
     public static final int RESOURCE_PACK_FORMAT = 9;
 
@@ -51,6 +51,27 @@ public final class CreateSuCraftResourcePack {
 
     private static final String LAST_RESOURCE_PACK_VERSION_FILE_PATH = OUTPUT_FOLDER_PATH + "/last_resource_pack_version.txt";
 
+    /**
+     * Only null while not initialized
+     */
+    private static @Nullable String outputFilePathRandomSuffix;
+
+    public static @NotNull String getOutputFilePathRandomSuffix() {
+        StringBuilder randomSuffixBuilder = new StringBuilder();
+        Random random = new Random(currentResourcePackVersion * 17 + currentResourcePackVersion * currentResourcePackVersion + 13371 + 17922347);
+        for (int i = 0; i < 10; i++) {
+            int randomCharacter = random.nextInt(62);
+            if (randomCharacter < 26) {
+                randomSuffixBuilder.append((char) (randomCharacter + 'a'));
+            } else if (randomCharacter < 52) {
+                randomSuffixBuilder.append((char) (randomCharacter - 26 + 'A'));
+            } else {
+                randomSuffixBuilder.append((char) (randomCharacter - 52 + '0'));
+            }
+        }
+        return "-" + randomSuffixBuilder;
+    }
+
     /**
      * Only null while not initialized
      */
@@ -62,19 +83,8 @@ public final class CreateSuCraftResourcePack {
             if (!folder.isDirectory()) {
                 throw new IOException("CreateSuCraftResourcePack.OUTPUT_FOLDER_PATH does not point to a folder");
             }
-            StringBuilder randomSuffix = new StringBuilder();
-            Random random = new Random(currentResourcePackVersion * 17 + currentResourcePackVersion * currentResourcePackVersion + 13371 + 17922347);
-            for (int i = 0; i < 10; i++) {
-                int randomCharacter = random.nextInt(62);
-                if (randomCharacter < 26) {
-                    randomSuffix.append((char) (randomCharacter + 'a'));
-                } else if (randomCharacter < 52) {
-                    randomSuffix.append((char) (randomCharacter - 26 + 'A'));
-                } else {
-                    randomSuffix.append((char) (randomCharacter - 52 + '0'));
-                }
-            }
-            outputFilePath = Path.of(OUTPUT_FOLDER_PATH, NAME + "-" + randomSuffix + ".zip").toString();
+
+            outputFilePath = Path.of(OUTPUT_FOLDER_PATH, NAME + getOutputFilePathRandomSuffix() + ".zip").toString();
         }
         return new File(outputFilePath);
     }
