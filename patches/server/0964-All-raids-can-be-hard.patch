From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MartijnMuijsers <martijnmuijsers@live.nl>
Date: Thu, 9 Jun 2022 01:16:50 +0200
Subject: [PATCH] All raids can be hard


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 258836302a283513ecc8936f258caccc90188c08..eb5f1938b6e478deff09ffec8c8ea7daf16c6cb9 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -86,6 +86,15 @@ public class PaperWorldConfig {
 
     // Martijn end - zombies can call for reinforcements on all difficulties
 
+    // Martijn start - raids are always hard
+
+    public boolean raidsAreAlwaysHard = false;
+    private void raidsAreAlwaysHard() {
+        raidsAreAlwaysHard = getBoolean("raids-are-always-hard", raidsAreAlwaysHard);
+    }
+
+    // Martijn end - raids are always hard
+
     public boolean zombiesTargetTurtleEggs = true;
     private void zombiesTargetTurtleEggs() {
         zombiesTargetTurtleEggs = getBoolean("zombies-target-turtle-eggs", zombiesTargetTurtleEggs);
diff --git a/src/main/java/net/minecraft/world/entity/raid/Raid.java b/src/main/java/net/minecraft/world/entity/raid/Raid.java
index f50abfd058e3adf1cf8c0f4468a60bc04e8541e7..c2e99b1914b97727e9609da5b82b4f1552cad627 100644
--- a/src/main/java/net/minecraft/world/entity/raid/Raid.java
+++ b/src/main/java/net/minecraft/world/entity/raid/Raid.java
@@ -118,7 +118,7 @@ public class Raid {
         this.raidCooldownTicks = 300;
         this.raidEvent.setProgress(0.0F);
         this.center = pos;
-        this.numGroups = this.getNumGroups(world.getDifficulty());
+        this.numGroups = this.getNumGroups(this.getDifficulty()); // Martijn - raids are always hard
         this.status = Raid.RaidStatus.ONGOING;
     }
 
@@ -150,6 +150,30 @@ public class Raid {
 
     }
 
+    // Martijn start - raids are always hard
+
+    public Difficulty getDifficulty() {
+        Difficulty levelDifficulty = this.level.getDifficulty();
+        return (levelDifficulty != Difficulty.PEACEFUL && this.level.paperConfig.raidsAreAlwaysHard) ? Difficulty.HARD : levelDifficulty;
+    }
+
+    public DifficultyInstance getLocalDifficulty(BlockPos pos) {
+        if (!this.level.paperConfig.raidsAreAlwaysHard) {
+            // Use the regular method
+            return this.level.getCurrentDifficultyAt(pos);
+        }
+        // This is based on Level.getCurrentlyDifficultyAt(BlockPos), but replaces the level's difficulty by this raid's difficulty
+        long i = 0L;
+        float f = 0.0F;
+        if (this.level.hasChunkAt(pos)) {
+            f = this.level.getMoonBrightness();
+            i = this.level.getChunkAt(pos).getInhabitedTime();
+        }
+        return new DifficultyInstance(this.getDifficulty(), this.level.getDayTime(), i, f);
+    }
+
+    // Martijn end - raids are always hard
+
     public boolean isOver() {
         return this.isVictory() || this.isLoss();
     }
@@ -548,7 +572,7 @@ public class Raid {
         int i = this.groupsSpawned + 1;
 
         this.totalHealth = 0.0F;
-        DifficultyInstance difficultydamagescaler = this.level.getCurrentDifficultyAt(pos);
+        DifficultyInstance difficultydamagescaler = this.getLocalDifficulty(pos); // Martijn - raids are always hard
         boolean flag1 = this.shouldSpawnBonusGroup();
         Raid.RaiderType[] araid_wave = Raid.RaiderType.VALUES;
         int j = araid_wave.length;
@@ -615,7 +639,7 @@ public class Raid {
             raider.setTicksOutsideRaid(0);
             if (!existing && pos != null) {
                 raider.setPos((double) pos.getX() + 0.5D, (double) pos.getY() + 1.0D, (double) pos.getZ() + 0.5D);
-                raider.finalizeSpawn(this.level, this.level.getCurrentDifficultyAt(pos), MobSpawnType.EVENT, (SpawnGroupData) null, (CompoundTag) null);
+                raider.finalizeSpawn(this.level, this.getLocalDifficulty(pos), MobSpawnType.EVENT, (SpawnGroupData) null, (CompoundTag) null); // Martijn - raids are always hard
                 raider.applyRaidBuffs(wave, false);
                 raider.setOnGround(true);
                 this.level.addFreshEntityWithPassengers(raider, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.RAID); // CraftBukkit
@@ -781,6 +805,11 @@ public class Raid {
 
     private int getPotentialBonusSpawns(Raid.RaiderType member, Random random, int wave, DifficultyInstance localDifficulty, boolean extra) {
         Difficulty enumdifficulty = localDifficulty.getDifficulty();
+        // Martijn start - raids are always hard
+        if (enumdifficulty != Difficulty.PEACEFUL && this.level.paperConfig.raidsAreAlwaysHard) {
+            enumdifficulty = Difficulty.HARD;
+        }
+        // Martijn end - raids are always hard
         boolean flag1 = enumdifficulty == Difficulty.EASY;
         boolean flag2 = enumdifficulty == Difficulty.NORMAL;
         int j;
