From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MartijnMuijsers <martijnmuijsers@live.nl>
Date: Fri, 5 Aug 2022 12:11:35 +0200
Subject: [PATCH] Custom blocks and items / 9032rj8i9sf


diff --git a/src/main/java/com/destroystokyo/paper/antixray/ChunkPacketBlockControllerAntiXray.java b/src/main/java/com/destroystokyo/paper/antixray/ChunkPacketBlockControllerAntiXray.java
index 1ea6263a8eb41e3bed530a4b08265a34ecb1d668..97c8a1609930568d3f64499ecd16c097193752f3 100644
--- a/src/main/java/com/destroystokyo/paper/antixray/ChunkPacketBlockControllerAntiXray.java
+++ b/src/main/java/com/destroystokyo/paper/antixray/ChunkPacketBlockControllerAntiXray.java
@@ -54,7 +54,7 @@ public class ChunkPacketBlockControllerAntiXray extends ChunkPacketBlockControll
 
     public ChunkPacketBlockControllerAntiXray(Level level, Executor executor) {
         super(level, executor);
-        WorldConfiguration.AntiCheat.AntiXRay paperWorldConfig = level.paperConfig().anticheat.antiXray;
+        WorldConfiguration.Anticheat.AntiXray paperWorldConfig = level.paperConfig().anticheat.antiXray;
         engineMode = paperWorldConfig.engineMode;
         maxBlockHeight = paperWorldConfig.maxBlockHeight >> 4 << 4;
         updateRadius = paperWorldConfig.updateRadius;
diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index efc90aacf624c906b0888c7696e7503aac35902b..6427e193d9b15efc2b4e2a332e4e369866d3fe96 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -267,7 +267,7 @@ public class WorldConfiguration extends ConfigurationPart {
 
     // Martijn end - bone meal regrows bark
 
-    public AntiCheat anticheat;
+    public Anticheat anticheat;
 
     public class Anticheat extends ConfigurationPart {
 
diff --git a/src/main/java/net/minecraft/network/Connection.java b/src/main/java/net/minecraft/network/Connection.java
index a925cd6404de02a413543a4b7376d7eba04410f6..783789855a7ed8f3dc6be7f7dd36d487d5f2624a 100644
--- a/src/main/java/net/minecraft/network/Connection.java
+++ b/src/main/java/net/minecraft/network/Connection.java
@@ -923,7 +923,7 @@ public class Connection extends SimpleChannelInboundHandler<Packet<?>> {
         }
         // Martijn start - custom blocks and items
         if (this.doesPlayerHaveSuCraftResourcePack()) {
-            callback = packet.updateCallbackWithBlockEntityPacketSends(callback, this);
+            packetsendlistener = packet.updateCallbackWithBlockEntityPacketSends(packetsendlistener, this);
         }
         // Martijn end - custom blocks and items
         packet.onPacketDispatch(getPlayer());
diff --git a/src/main/java/net/minecraft/network/protocol/Packet.java b/src/main/java/net/minecraft/network/protocol/Packet.java
index 5fdb104e8df5539f13d05ba35c602c778f71331d..04a9f8d02f4a0ed0b3c33e3a083c821a8516f224 100644
--- a/src/main/java/net/minecraft/network/protocol/Packet.java
+++ b/src/main/java/net/minecraft/network/protocol/Packet.java
@@ -5,6 +5,7 @@ import io.netty.util.concurrent.GenericFutureListener;
 import net.minecraft.network.Connection;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.PacketListener;
+import net.minecraft.network.PacketSendListener;
 import org.jetbrains.annotations.NotNull;
 
 import javax.annotation.Nullable;
@@ -59,7 +60,7 @@ public interface Packet<T extends PacketListener> {
         return null;
     }
 
-    default <F extends Future<? super Void>> GenericFutureListener<F> updateCallbackWithBlockEntityPacketSends(@Nullable GenericFutureListener<F> callback, @NotNull Connection connection) {
+    default @Nullable PacketSendListener updateCallbackWithBlockEntityPacketSends(@Nullable PacketSendListener callback, @NotNull Connection connection) {
         return callback;
     }
 
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket.java
index ee4b4d93c1814b327a8786829e1b3bcea4fccdfd..bde8ecf0e4a8c33beeb2fb49db6eee8367323912 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket.java
@@ -6,6 +6,7 @@ import net.minecraft.core.BlockPos;
 import net.minecraft.network.Connection;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.protocol.Packet;
+import net.minecraft.network.PacketSendListener;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.state.BlockState;
@@ -81,29 +82,44 @@ public class ClientboundBlockUpdatePacket implements Packet<ClientGamePacketList
     }
 
     @Override
-    public <F extends Future<? super Void>> GenericFutureListener<F> updateCallbackWithBlockEntityPacketSends(@Nullable GenericFutureListener<F> callback, @NotNull Connection connection) {
-        return future -> {
-            if (callback != null) {
-                callback.operationComplete(future);
-            }
-            if (!future.isCancelled() && future.isSuccess() && connection.isConnected()) {
-                var level = connection.getPlayer().getLevel();
-                if (level != null) {
-                    for (int dx = -1; dx <= 1; dx++) {
-                        for (int dy = -1; dy <= 1; dy++) {
-                            for (int dz = -1; dz <= 1; dz++) {
-                                int nx = this.pos.getX() + dx;
-                                int ny = this.pos.getY() + dy;
-                                int nz = this.pos.getZ() + dz;
-                                BlockPos npos = new BlockPos(nx, ny, nz);
-                                if (level.isLoadedAndInBounds(npos)) {
-                                    connection.updatePotentialBlockEntityAtPosition(npos, false, null, true);
+    public @Nullable PacketSendListener updateCallbackWithBlockEntityPacketSends(@Nullable PacketSendListener callback, @NotNull Connection connection) {
+        return new PacketSendListener() {
+
+            @Override
+            public void onSuccess() {
+
+                if (callback != null) {
+                    callback.onSuccess();
+                }
+                if (connection.isConnected()) {
+                    var level = connection.getPlayer().getLevel();
+                    if (level != null) {
+                        for (int dx = -1; dx <= 1; dx++) {
+                            for (int dy = -1; dy <= 1; dy++) {
+                                for (int dz = -1; dz <= 1; dz++) {
+                                    int nx = ClientboundBlockUpdatePacket.this.pos.getX() + dx;
+                                    int ny = ClientboundBlockUpdatePacket.this.pos.getY() + dy;
+                                    int nz = ClientboundBlockUpdatePacket.this.pos.getZ() + dz;
+                                    BlockPos npos = new BlockPos(nx, ny, nz);
+                                    if (level.isLoadedAndInBounds(npos)) {
+                                        connection.updatePotentialBlockEntityAtPosition(npos, false, null, true);
+                                    }
                                 }
                             }
                         }
                     }
                 }
+
             }
+
+            @Override
+            public @Nullable Packet<?> onFailure() {
+                if (callback != null) {
+                    return callback.onFailure();
+                }
+                return null;
+            }
+
         };
     }
 
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java
index 3ee1f0376ce4250889145af4d19dd6312f4b858d..20b3c5a8d163db354acfc63072c2b680c56988ea 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java
@@ -45,7 +45,6 @@ public class ClientboundLevelChunkWithLightPacket implements Packet<ClientGamePa
         ChunkPos chunkPos = chunk.getPos();
         this.x = chunkPos.x;
         this.z = chunkPos.z;
-        com.destroystokyo.paper.antixray.ChunkPacketInfo<net.minecraft.world.level.block.state.BlockState> chunkPacketInfo = modifyBlocks ? chunk.getLevel().chunkPacketBlockController.getChunkPacketInfo(this, chunk) : null;
         this.chunkData = new ClientboundLevelChunkPacketData(chunk, chunkPacketInfo);
         // Paper end
         this.lightData = new ClientboundLightUpdatePacketData(chunkPos, lightProvider, skyBits, blockBits, nonEdge);
