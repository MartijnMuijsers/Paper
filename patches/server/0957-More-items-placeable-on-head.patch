From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MartijnMuijsers <martijnmuijsers@live.nl>
Date: Tue, 7 Jun 2022 00:40:07 +0200
Subject: [PATCH] More items placeable on head


diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index b43aead7ecf3b18ef0cd8ac9d8ae9afdd173b93f..70763f64716c17ad1b294d3356206d2a12a2d37e 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -119,6 +119,8 @@ import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.scores.PlayerTeam;
+import org.bukkit.craftbukkit.util.permissions.CraftDefaultPermissions;
+import org.bukkit.permissions.Permissible;
 import org.slf4j.Logger;
 
 // CraftBukkit start
@@ -4278,15 +4280,20 @@ public abstract class LivingEntity extends Entity {
         }
     }
 
-    public static EquipmentSlot getEquipmentSlotForItem(ItemStack stack) {
+    public static EquipmentSlot getEquipmentSlotForItem(ItemStack stack, @Nullable Permissible target) {
         Item item = stack.getItem();
-
+        // Martijn start - more items placeable on head
+        // Makes it so players can place banners into the head slot, and will place banners into the head slot instantly when shift-clicking
+        if (target != null && target.hasPermission(CraftDefaultPermissions.putBannersOnHead) && stack.is(ItemTags.BANNERS)) {
+            return EquipmentSlot.HEAD;
+        }
+        // Martijn end - more items placeable on head
         return !stack.is(Items.CARVED_PUMPKIN) && (!(item instanceof BlockItem) || !(((BlockItem) item).getBlock() instanceof AbstractSkullBlock)) ? (item instanceof ArmorItem ? ((ArmorItem) item).getSlot() : (stack.is(Items.ELYTRA) ? EquipmentSlot.CHEST : (stack.is(Items.SHIELD) ? EquipmentSlot.OFFHAND : EquipmentSlot.MAINHAND))) : EquipmentSlot.HEAD;
     }
 
     private static SlotAccess createEquipmentSlotAccess(LivingEntity entity, EquipmentSlot slot) {
         return slot != EquipmentSlot.HEAD && slot != EquipmentSlot.MAINHAND && slot != EquipmentSlot.OFFHAND ? SlotAccess.forEquipmentSlot(entity, slot, (itemstack) -> {
-            return itemstack.isEmpty() || Mob.getEquipmentSlotForItem(itemstack) == slot;
+            return itemstack.isEmpty() || Mob.getEquipmentSlotForItem(itemstack, entity.getBukkitEntity()) == slot; // Martijn - more items placeable on head
         }) : SlotAccess.forEquipmentSlot(entity, slot);
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index e3227a806d9e19923783122ea94ae19e7dbe71da..eff6e118bb83e1790b632299a70a4eec581191f1 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -74,6 +74,7 @@ import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.level.storage.loot.LootContext;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.craftbukkit.entity.CraftLivingEntity;
+import org.bukkit.craftbukkit.util.permissions.CraftDefaultPermissions;
 import org.bukkit.event.entity.CreatureSpawnEvent;
 import org.bukkit.event.entity.EntityCombustByEntityEvent;
 import org.bukkit.event.entity.EntityTargetLivingEntityEvent;
@@ -665,7 +666,7 @@ public abstract class Mob extends LivingEntity {
 
     public boolean equipItemIfPossible(ItemStack itemstack, ItemEntity entityitem) {
         // CraftBukkit end
-        EquipmentSlot enumitemslot = getEquipmentSlotForItem(itemstack);
+        EquipmentSlot enumitemslot = getEquipmentSlotForItem(itemstack, getBukkitEntity()); // Martijn - more items placeable on head
         ItemStack itemstack1 = this.getItemBySlot(enumitemslot);
         boolean flag = this.canReplaceCurrentItem(itemstack, itemstack1);
 
@@ -1223,7 +1224,7 @@ public abstract class Mob extends LivingEntity {
 
     @Override
     public boolean canTakeItem(ItemStack stack) {
-        EquipmentSlot enumitemslot = getEquipmentSlotForItem(stack);
+        EquipmentSlot enumitemslot = getEquipmentSlotForItem(stack, getBukkitEntity()); // Martijn - more items placeable on head
 
         return this.getItemBySlot(enumitemslot).isEmpty() && this.canPickUpLoot();
     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Dolphin.java b/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
index b2baf0741691c9942e0cb7c161ccba528c2f6d4e..cd4afaa47542af2e38bf7b40ca3d1e37b0b5b613 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
@@ -226,7 +226,7 @@ public class Dolphin extends WaterAnimal {
 
     @Override
     public boolean canTakeItem(ItemStack stack) {
-        EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack);
+        EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack, getBukkitEntity()); // Martijn - more items placeable on head
 
         return !this.getItemBySlot(enumitemslot).isEmpty() ? false : enumitemslot == EquipmentSlot.MAINHAND && super.canTakeItem(stack);
     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Fox.java b/src/main/java/net/minecraft/world/entity/animal/Fox.java
index e36c01533dc85541c91f7a55690fae46f770b516..e0ed5317513f48317831ef8a63639e284eed7685 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Fox.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Fox.java
@@ -475,7 +475,7 @@ public class Fox extends Animal {
 
     @Override
     public boolean canTakeItem(ItemStack stack) {
-        EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack);
+        EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack, getBukkitEntity()); // Martijn - more items placeable on head
 
         return !this.getItemBySlot(enumitemslot).isEmpty() ? false : enumitemslot == EquipmentSlot.MAINHAND && super.canTakeItem(stack);
     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Panda.java b/src/main/java/net/minecraft/world/entity/animal/Panda.java
index 8db4fc59b99694d2b15af188fc1c39ccf0090a8d..ad9bc82fa63c4589d24564414ce1ef691f26800b 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Panda.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Panda.java
@@ -109,7 +109,7 @@ public class Panda extends Animal {
 
     @Override
     public boolean canTakeItem(ItemStack stack) {
-        EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack);
+        EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack, getBukkitEntity()); // Martijn - more items placeable on head
 
         return !this.getItemBySlot(enumitemslot).isEmpty() ? false : enumitemslot == EquipmentSlot.MAINHAND && super.canTakeItem(stack);
     }
diff --git a/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java b/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java
index e5ef24d92de21c4c0e6a98e06985e52d47bfdce0..65a06cb1892080fc818c61aa518cbc58af038fbc 100644
--- a/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java
+++ b/src/main/java/net/minecraft/world/entity/decoration/ArmorStand.java
@@ -203,7 +203,7 @@ public class ArmorStand extends LivingEntity {
 
     @Override
     public boolean canTakeItem(ItemStack stack) {
-        net.minecraft.world.entity.EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack);
+        net.minecraft.world.entity.EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack, getBukkitEntity()); // Martijn - more items placeable on head
 
         return this.getItemBySlot(enumitemslot).isEmpty() && !this.isDisabled(enumitemslot);
     }
@@ -376,7 +376,7 @@ public class ArmorStand extends LivingEntity {
             } else if (player.level.isClientSide) {
                 return InteractionResult.CONSUME;
             } else {
-                net.minecraft.world.entity.EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(itemstack);
+                net.minecraft.world.entity.EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(itemstack, getBukkitEntity()); // Martijn - more items placeable on head
 
                 if (itemstack.isEmpty()) {
                     net.minecraft.world.entity.EquipmentSlot enumitemslot1 = this.getClickedSlot(hitPos);
diff --git a/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java b/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
index 63cfda124b5bad20af3050a0b62d73883b6abf7d..3d261be4686432292eb0b286edf35232f3552dc2 100644
--- a/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
@@ -392,7 +392,7 @@ public class Piglin extends AbstractPiglin implements CrossbowAttackMob, Invento
     }
 
     protected boolean canReplaceCurrentItem(ItemStack stack) {
-        EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack);
+        EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack, getBukkitEntity()); // Martijn - more items placeable on head
         ItemStack itemstack1 = this.getItemBySlot(enumitemslot);
 
         return this.canReplaceCurrentItem(stack, itemstack1);
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 7ead6521b9cdb8d79d107dc1459049c9ba91719d..2e1b1abdd693c56a0a6495db47a9ed6fcb170033 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -2219,7 +2219,7 @@ public abstract class Player extends LivingEntity {
 
     @Override
     public boolean canTakeItem(ItemStack stack) {
-        EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack);
+        EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack, getBukkitEntity()); // Martijn - more items placeable on head
 
         return this.getItemBySlot(enumitemslot).isEmpty();
     }
diff --git a/src/main/java/net/minecraft/world/inventory/InventoryMenu.java b/src/main/java/net/minecraft/world/inventory/InventoryMenu.java
index 111da6398bb561e58571e47743088ce80416234d..2b9b013c3c22335704b22726765094efeac9f3b4 100644
--- a/src/main/java/net/minecraft/world/inventory/InventoryMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/InventoryMenu.java
@@ -14,6 +14,7 @@ import net.minecraft.world.item.crafting.Recipe;
 import net.minecraft.world.item.enchantment.EnchantmentHelper;
 import org.bukkit.craftbukkit.inventory.CraftInventoryCrafting;
 import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.craftbukkit.util.permissions.CraftDefaultPermissions;
 // CraftBukkit end
 
 public class InventoryMenu extends RecipeBookMenu<CraftingContainer> {
@@ -81,7 +82,13 @@ public class InventoryMenu extends RecipeBookMenu<CraftingContainer> {
 
                 @Override
                 public boolean mayPlace(ItemStack stack) {
-                    return enumitemslot == Mob.getEquipmentSlotForItem(stack);
+                    // Martijn start - more items placeable on head
+                    // Makes it so some players can place banners into the head slot, and will place banners into the head slot instantly when shift-clicking
+                    if (enumitemslot == EquipmentSlot.HEAD && owner.getBukkitEntity().hasPermission(CraftDefaultPermissions.putAllBlocksAndItemsOnHead)) {
+                        return true;
+                    }
+                    return enumitemslot == Mob.getEquipmentSlotForItem(stack, owner.getBukkitEntity());
+                    // Martijn end - more items placeable on head
                 }
 
                 @Override
@@ -164,7 +171,7 @@ public class InventoryMenu extends RecipeBookMenu<CraftingContainer> {
             ItemStack itemstack1 = slot.getItem();
 
             itemstack = itemstack1.copy();
-            EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(itemstack);
+            EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(itemstack, player.getBukkitEntity()); // Martijn - more items placeable on head
 
             if (index == 0) {
                 if (!this.moveItemStackTo(itemstack1, 9, 45, true)) {
diff --git a/src/main/java/net/minecraft/world/item/ArmorItem.java b/src/main/java/net/minecraft/world/item/ArmorItem.java
index baa7e055d8ee4a153842128b07984b9f6deac6ca..b7eb0a425750f72fdc0efa1a95b4a55064e420bb 100644
--- a/src/main/java/net/minecraft/world/item/ArmorItem.java
+++ b/src/main/java/net/minecraft/world/item/ArmorItem.java
@@ -55,7 +55,7 @@ public class ArmorItem extends Item implements Wearable {
             return false;
         } else {
             LivingEntity entityliving = (LivingEntity) list.get(0);
-            EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(armor);
+            EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(armor, entityliving.getBukkitEntity()); // Martijn - more items placeable on head
             ItemStack itemstack1 = armor.split(1);
             // CraftBukkit start
             Level world = pointer.getLevel();
@@ -135,7 +135,7 @@ public class ArmorItem extends Item implements Wearable {
     @Override
     public InteractionResultHolder<ItemStack> use(Level world, Player user, InteractionHand hand) {
         ItemStack itemstack = user.getItemInHand(hand);
-        EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(itemstack);
+        EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(itemstack, user.getBukkitEntity()); // Martijn - more items placeable on head
         ItemStack itemstack1 = user.getItemBySlot(enumitemslot);
 
         if (itemstack1.isEmpty()) {
diff --git a/src/main/java/org/bukkit/craftbukkit/util/permissions/CraftDefaultPermissions.java b/src/main/java/org/bukkit/craftbukkit/util/permissions/CraftDefaultPermissions.java
index 50442eb3aa4c219956a5d4078ede5eb5f4f6cbf9..e5cbfb089883cde594ed98cc51e204cfacc10382 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/permissions/CraftDefaultPermissions.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/permissions/CraftDefaultPermissions.java
@@ -6,6 +6,9 @@ import org.bukkit.util.permissions.DefaultPermissions;
 public final class CraftDefaultPermissions {
     private static final String ROOT = "minecraft";
 
+    public static Permission putBannersOnHead;
+    public static Permission putAllBlocksAndItemsOnHead;
+
     private CraftDefaultPermissions() {}
 
     public static void registerCorePermissions() {
@@ -18,6 +21,10 @@ public final class CraftDefaultPermissions {
         DefaultPermissions.registerPermission(CraftDefaultPermissions.ROOT + ".debugstick.always", "Gives the user the ability to use the debug stick in all game modes", org.bukkit.permissions.PermissionDefault.FALSE, parent);
         DefaultPermissions.registerPermission(CraftDefaultPermissions.ROOT + ".debugstick.survivallike", "Gives the user the ability to partially use the debug stick in all game modes, with the only usages allowed being those compatible with survival mode gameplay", org.bukkit.permissions.PermissionDefault.FALSE, parent);
         DefaultPermissions.registerPermission(CraftDefaultPermissions.ROOT + ".commandblock", "Gives the user the ability to use command blocks.", org.bukkit.permissions.PermissionDefault.OP, parent); // Paper
+        // Martijn start - more items placeable on head
+        putBannersOnHead = DefaultPermissions.registerPermission(CraftDefaultPermissions.ROOT + ".moreitemsonhead.banner", "Gives the user the ability to put banners into their head armor slot");
+        putAllBlocksAndItemsOnHead = DefaultPermissions.registerPermission(CraftDefaultPermissions.ROOT + ".moreitemsonhead.all", "Gives the user the ability to put any block or item into their head armor slot");
+        // Martijn end - more items placeable on head
         // Spigot end
         parent.recalculatePermissibles();
     }
diff --git a/src/test/java/org/bukkit/PerMaterialTest.java b/src/test/java/org/bukkit/PerMaterialTest.java
index 644c651a6f1ed906eddfaedd8e9bdde30ba7b44c..57ea58eedd65d1c8777edde789b90b06f73f8ee2 100644
--- a/src/test/java/org/bukkit/PerMaterialTest.java
+++ b/src/test/java/org/bukkit/PerMaterialTest.java
@@ -271,7 +271,7 @@ public class PerMaterialTest extends AbstractTestingBase {
     @Test
     public void testEquipmentSlot() {
         if (this.material.isItem()) {
-            EquipmentSlot expected = CraftEquipmentSlot.getSlot(Mob.getEquipmentSlotForItem(CraftItemStack.asNMSCopy(new ItemStack(this.material))));
+            EquipmentSlot expected = CraftEquipmentSlot.getSlot(Mob.getEquipmentSlotForItem(CraftItemStack.asNMSCopy(new ItemStack(this.material)), null));
             assertThat(this.material.getEquipmentSlot(), is(expected));
         }
     }
