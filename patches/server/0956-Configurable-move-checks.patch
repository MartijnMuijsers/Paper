From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MartijnMuijsers <martijnmuijsers@live.nl>
Date: Sat, 29 Jan 2022 17:15:37 +0100
Subject: [PATCH] Configurable move checks


diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 79e4af264c72a465817148004fe694bc6226654e..846270328c55bd2ea698e124d21d0ae7052c4e31 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -586,7 +586,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
                 }
                 // Paper end
 
-                if (d10 - d9 > Math.max(100.0D, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && !this.isSingleplayerOwner()) {
+                if (org.spigotmc.SpigotConfig.checkMovedTooQuickly && d10 - d9 > Math.max(100.0D, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && !this.isSingleplayerOwner()) { // Martijn - configurable move checks
                 // CraftBukkit end
                     ServerGamePacketListenerImpl.LOGGER.warn("{} (vehicle of {}) moved too quickly! {},{},{}", new Object[]{entity.getName().getString(), this.player.getName().getString(), d6, d7, d8});
                     this.connection.send(new ClientboundMoveVehiclePacket(entity));
@@ -614,7 +614,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
                 d10 = d6 * d6 + d7 * d7 + d8 * d8;
                 boolean flag2 = false;
 
-                if (d10 > org.spigotmc.SpigotConfig.movedWronglyThreshold) { // Spigot
+                if (org.spigotmc.SpigotConfig.checkMovedWrongly && d10 > org.spigotmc.SpigotConfig.movedWronglyThreshold) { // Spigot // Martijn - configurable move checks
                     flag2 = true; // Paper - diff on change, this should be moved wrongly
                     ServerGamePacketListenerImpl.LOGGER.warn("{} (vehicle of {}) moved wrongly! {}", new Object[]{entity.getName().getString(), this.player.getName().getString(), Math.sqrt(d10)});
                 }
@@ -1378,7 +1378,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
                             if (!this.player.isChangingDimension() && (!this.player.getLevel().getGameRules().getBoolean(GameRules.RULE_DISABLE_ELYTRA_MOVEMENT_CHECK) || !this.player.isFallFlying())) {
                                 float f2 = this.player.isFallFlying() ? 300.0F : 100.0F;
 
-                                if (d11 - d10 > Math.max(f2, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && !this.isSingleplayerOwner()) {
+                                if (org.spigotmc.SpigotConfig.checkMovedTooQuickly && d11 - d10 > Math.max(f2, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && !this.isSingleplayerOwner()) { // Martijn - configurable move checks
                                 // CraftBukkit end
                                     ServerGamePacketListenerImpl.LOGGER.warn("{} moved too quickly! {},{},{}", new Object[]{this.player.getName().getString(), d7, d8, d9});
                                     this.teleport(this.player.getX(), this.player.getY(), this.player.getZ(), this.player.getYRot(), this.player.getXRot());
@@ -1446,7 +1446,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
                             d11 = d7 * d7 + d8 * d8 + d9 * d9;
                             boolean flag2 = false;
 
-                            if (!this.player.isChangingDimension() && d11 > org.spigotmc.SpigotConfig.movedWronglyThreshold && !this.player.isSleeping() && !this.player.gameMode.isCreative() && this.player.gameMode.getGameModeForPlayer() != GameType.SPECTATOR) { // Spigot
+                            if (!this.player.isChangingDimension() && org.spigotmc.SpigotConfig.checkMovedWrongly && d11 > org.spigotmc.SpigotConfig.movedWronglyThreshold && !this.player.isSleeping() && !this.player.gameMode.isCreative() && this.player.gameMode.getGameModeForPlayer() != GameType.SPECTATOR) { // Spigot // Martijn - configurable move checks
                                 flag2 = true; // Paper - diff on change, this should be moved wrongly
                                 ServerGamePacketListenerImpl.LOGGER.warn("{} moved wrongly!", this.player.getName().getString());
                             }
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index d509187ca63963fdd7f1a44d89d2aa1a1b1ce3bd..a0eb5cb05345b986c103f667f1e49ff97f315a17 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -339,15 +339,19 @@ public class SpigotConfig
     }
 
     public static double movedWronglyThreshold;
+    public static boolean checkMovedWrongly; // Martijn - configurable move checks
     private static void movedWronglyThreshold()
     {
-        SpigotConfig.movedWronglyThreshold = SpigotConfig.getDouble( "settings.moved-wrongly-threshold", 0.0625D );
+        SpigotConfig.movedWronglyThreshold = SpigotConfig.getDouble("settings.moved-wrongly-threshold", 0.0625D);
+        SpigotConfig.checkMovedWrongly = SpigotConfig.getBoolean( "settings.check-moved-wrongly", true ); // Martijn end - configurable move checks
     }
 
     public static double movedTooQuicklyMultiplier;
+    public static boolean checkMovedTooQuickly; // Martijn - configurable move checks
     private static void movedTooQuicklyMultiplier()
     {
         SpigotConfig.movedTooQuicklyMultiplier = SpigotConfig.getDouble( "settings.moved-too-quickly-multiplier", 10.0D );
+        SpigotConfig.checkMovedTooQuickly = SpigotConfig.getBoolean( "settings.check-moved-too-quickly", true ); // Martijn end - configurable move checks
     }
 
     public static double maxHealth = 2048;
