From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MartijnMuijsers <martijnmuijsers@live.nl>
Date: Fri, 28 Jan 2022 16:58:29 +0100
Subject: [PATCH] More entity activation configuration


diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index 58fa84f0c09176964f324fd97fca3f6f5c975590..c8b5a4264ec7d44ab9646b297933dfc2b8e34ba7 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -167,6 +167,22 @@ public class PaperConfig {
 
     // Martijn end - configurable server version
 
+    // Martijn start - configurable proportion of skipped active entities
+
+    /**
+     * 0 disables this feature
+     */
+    public static int skippedActiveEntityRatioNumerator = 1;
+    private static void skippedActiveEntityRatioNumerator() {
+        skippedActiveEntityRatioNumerator = getInt("settings.skipped-active-entity-ratio.numerator", skippedActiveEntityRatioNumerator);
+    }
+    public static int skippedActiveEntityRatioDenominator = 4;
+    private static void skippedActiveEntityRatioDenominator() {
+        skippedActiveEntityRatioDenominator = getInt("settings.skipped-active-entity-ratio.denominator", skippedActiveEntityRatioDenominator);
+    }
+
+    // Martijn end - configurable proportion of skipped active entities
+
     // Martijn start - configurable keepalive
 
     /**
diff --git a/src/main/java/org/spigotmc/ActivationRange.java b/src/main/java/org/spigotmc/ActivationRange.java
index 7e9b5100184d97fdf3d87d0237679f828c33d6e5..386d2519e45e26dc231fcfa721453719f9ada159 100644
--- a/src/main/java/org/spigotmc/ActivationRange.java
+++ b/src/main/java/org/spigotmc/ActivationRange.java
@@ -1,5 +1,6 @@
 package org.spigotmc;
 
+import com.destroystokyo.paper.PaperConfig;
 import net.minecraft.core.BlockPos;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.level.ServerChunkCache;
@@ -10,12 +11,25 @@ import net.minecraft.world.entity.LightningBolt;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.PathfinderMob;
+import net.minecraft.world.entity.TamableAnimal;
 import net.minecraft.world.entity.ai.Brain;
 import net.minecraft.world.entity.ambient.AmbientCreature;
 import net.minecraft.world.entity.animal.Animal;
 import net.minecraft.world.entity.animal.Bee;
+import net.minecraft.world.entity.animal.Cat;
+import net.minecraft.world.entity.animal.Chicken;
+import net.minecraft.world.entity.animal.Fox;
+import net.minecraft.world.entity.animal.IronGolem;
+import net.minecraft.world.entity.animal.Ocelot;
+import net.minecraft.world.entity.animal.PolarBear;
+import net.minecraft.world.entity.animal.Rabbit;
 import net.minecraft.world.entity.animal.Sheep;
+import net.minecraft.world.entity.animal.SnowGolem;
+import net.minecraft.world.entity.animal.Squid;
+import net.minecraft.world.entity.animal.Turtle;
 import net.minecraft.world.entity.animal.WaterAnimal;
+import net.minecraft.world.entity.animal.Wolf;
+import net.minecraft.world.entity.animal.axolotl.Axolotl;
 import net.minecraft.world.entity.animal.horse.Llama;
 import net.minecraft.world.entity.boss.EnderDragonPart;
 import net.minecraft.world.entity.boss.enderdragon.EndCrystal;
@@ -23,8 +37,16 @@ import net.minecraft.world.entity.boss.enderdragon.EnderDragon;
 import net.minecraft.world.entity.boss.wither.WitherBoss;
 import net.minecraft.world.entity.item.PrimedTnt;
 import net.minecraft.world.entity.monster.Creeper;
+import net.minecraft.world.entity.monster.Endermite;
 import net.minecraft.world.entity.monster.Enemy;
+import net.minecraft.world.entity.monster.Guardian;
 import net.minecraft.world.entity.monster.Pillager;
+import net.minecraft.world.entity.monster.Witch;
+import net.minecraft.world.entity.monster.WitherSkeleton;
+import net.minecraft.world.entity.monster.Zoglin;
+import net.minecraft.world.entity.monster.hoglin.Hoglin;
+import net.minecraft.world.entity.monster.piglin.AbstractPiglin;
+import net.minecraft.world.entity.monster.piglin.Piglin;
 import net.minecraft.world.entity.npc.Villager;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.AbstractArrow;
@@ -38,6 +60,12 @@ import co.aikar.timings.MinecraftTimings;
 import net.minecraft.world.entity.schedule.Activity;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.AABB;
+// Pufferfish start
+import net.minecraft.world.phys.Vec3;
+import java.util.List;
+// Pufferfish end
+import org.bukkit.entity.Enderman;
+import org.bukkit.entity.Fish;
 
 public class ActivationRange
 {
@@ -296,7 +324,67 @@ public class ActivationRange
             }
             if ( entity instanceof Mob && ((Mob) entity ).getTarget() != null) // Paper
             {
-                return 20; // Paper
+                // Martijn start - configurable mob target inactivity immunity
+                int hunterImmunityFor = config.defaultMobTargetingMobImmunityFor;
+                LivingEntity target = ((Mob) entity ).getTarget();
+                if (entity instanceof Wolf) {
+                    if (target instanceof Sheep) {
+                        hunterImmunityFor = config.wolfTargetingSheepImmunityFor;
+                    } else if (target instanceof Fox) {
+                        hunterImmunityFor = config.wolfTargetingFoxImmunityFor;
+                    }
+                } else if (entity instanceof Guardian && target instanceof Squid) {
+                    hunterImmunityFor = config.guardianTargetingSquidImmunityFor;
+                } else if (entity instanceof Llama && target instanceof Wolf) {
+                    hunterImmunityFor = config.llamaTargetingWolfImmunityFor;
+                } else if (entity instanceof PolarBear && target instanceof Fox) {
+                    hunterImmunityFor = config.polarBearTargetingFoxImmunityFor;
+                } else if (entity instanceof Fox && target instanceof Chicken) {
+                    hunterImmunityFor = config.foxTargetingChickenImmunityFor;
+                } else if (entity instanceof Ocelot && target instanceof Chicken) {
+                    hunterImmunityFor = config.ocelotTargetingChickenImmunityFor;
+                } else if (entity instanceof Cat && target instanceof Rabbit) {
+                    hunterImmunityFor = config.catTargetingRabbitImmunityFor;
+                } else if (entity instanceof Enderman && target instanceof Endermite) {
+                    hunterImmunityFor = config.endermanTargetingEndermiteImmunityFor;
+                } else if (entity instanceof AbstractPiglin) {
+                    if (target instanceof Hoglin) {
+                        hunterImmunityFor = config.piglinTargetingHoglinImmunityFor;
+                    } else if (target instanceof WitherSkeleton) {
+                        hunterImmunityFor = config.piglinTargetingWitherSkeletonImmunityFor;
+                    }
+                } else if (entity instanceof WitherSkeleton) {
+                    if (target instanceof AbstractPiglin) {
+                        hunterImmunityFor = config.witherSkeletonTargetingPiglinImmunityFor;
+                    } else if (target instanceof IronGolem) {
+                        hunterImmunityFor = config.witherSkeletonTargetingIronGolemImmunityFor;
+                    } else if (target instanceof SnowGolem) {
+                        hunterImmunityFor = config.witherSkeletonTargetingSnowGolemImmunityFor;
+                    }
+                } else if (entity instanceof SnowGolem) {
+                    if (!(target instanceof Player)) {
+                        hunterImmunityFor = config.snowGolemTargetingNonPlayerImmunityFor;
+                    }
+                } else if (entity instanceof Zoglin) {
+                    if (!(target instanceof Player)) {
+                        hunterImmunityFor = config.zoglinTargetingNonPlayerImmunityFor;
+                    }
+                } else if (entity instanceof Axolotl) {
+                    if (target instanceof Fish) {
+                        hunterImmunityFor = config.axolotlTargetingFishImmunityFor;
+                    } else if (target instanceof Squid) {
+                        hunterImmunityFor = config.axolotlTargetingSquidImmunityFor;
+                    }
+                } else if (entity instanceof Witch && target instanceof Witch) {
+                    hunterImmunityFor = config.witchTargetingWitchImmunityFor;
+                }
+                if (target instanceof Turtle) {
+                    hunterImmunityFor = config.mobTargetingTurtleImmunityFor;
+                }
+                if (hunterImmunityFor > 0) {
+                    return hunterImmunityFor;
+                }
+                // Martijn end - configurable mob target inactivity immunity
             }
             // Paper start
             if (entity instanceof Bee) {
@@ -334,14 +422,27 @@ public class ActivationRange
             if ( entity instanceof Animal )
             {
                 Animal animal = (Animal) entity;
-                if ( animal.isBaby() || animal.isInLove() )
+                // Martijn start - configurable baby inactivity immunity
+                if ( config.babyImmunityFor > 0 && animal.isBaby() ) {
+                    return config.babyImmunityFor;
+                }
+                if ( animal.isInLove() )
+                // Martijn end - configurable baby inactivity immunity
                 {
                     return 5; // Paper
                 }
-                if ( entity instanceof Sheep && ( (Sheep) entity ).isSheared() )
+                if ( config.areShearedSheepImmune && entity instanceof Sheep && ( (Sheep) entity ).isSheared() ) // Martijn - configurable sheared sheep immunity
                 {
                     return 1; // Paper
                 }
+                // Martijn start - configurable non-sitting pet immunity
+                if ( config.areNonSittingPetsImmune && animal instanceof TamableAnimal ) {
+                    TamableAnimal tamableAnimal = (TamableAnimal) animal;
+                    if (tamableAnimal.getOwnerUUID() != null && !tamableAnimal.isOrderedToSit()) {
+                        return 20;
+                    }
+                }
+                // Martijn end - configurable non-sitting pet immunity
             }
             if (entity instanceof Creeper && ((Creeper) entity).isIgnited()) { // isExplosive
                 return 20; // Paper
@@ -406,11 +507,17 @@ public class ActivationRange
                 isActive = true;
 
             }
-            // Add a little performance juice to active entities. Skip 1/4 if not immune.
-        } else if ( entity.tickCount + entity.getId() + 1 % 4 == 0 && ActivationRange.checkEntityImmunities( entity ) < 0 ) // Paper
-        {
-            isActive = false;
+            // Martijn start - configurable proportion of skipped active entities
+            // Add a little performance juice to active entities. Skip skippedActiveEntityRatioNumerator / skippedActiveEntityRatioDenominator 'th of active entities if not immune.
+        } else if (PaperConfig.skippedActiveEntityRatioNumerator > 0) {
+            long someMeaninglessValueBasedOnTickCountAndEntityId = entity.level.getGameTime() + entity.getId() + 1;
+            someMeaninglessValueBasedOnTickCountAndEntityId = 31 * someMeaninglessValueBasedOnTickCountAndEntityId * someMeaninglessValueBasedOnTickCountAndEntityId + 1009 * someMeaninglessValueBasedOnTickCountAndEntityId + 171719;
+            if ( Math.floorMod( someMeaninglessValueBasedOnTickCountAndEntityId , PaperConfig.skippedActiveEntityRatioDenominator) < PaperConfig.skippedActiveEntityRatioNumerator && ActivationRange.checkEntityImmunities( entity ) < 0 ) // Paper
+            {
+                isActive = false;
+            }
         }
+        // Martijn end - configurable proportion of skipped active entities
         return isActive;
     }
 }
diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java
index 31a447e6e156b7b244b2ac69a9c03c09c7ed388c..3039d3b1001ee491fd07c1609454a8bf6eeca313 100644
--- a/src/main/java/org/spigotmc/SpigotWorldConfig.java
+++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java
@@ -233,6 +233,37 @@ public class SpigotWorldConfig
     // Paper end
     public boolean tickInactiveVillagers = true;
     public boolean ignoreSpectatorActivation = false;
+    // Martijn start - configurable baby inactivity immunity
+    /**
+     * A nonpositive value disables this feature
+     */
+    public int babyImmunityFor = 5;
+    // Martijn end - configurable baby inactivity immunity
+    public boolean areShearedSheepImmune = true; // Martijn - configurable sheared sheep immunity
+    public boolean areNonSittingPetsImmune = false; // Martijn - configurable non-sitting pet immunity
+    // Martijn start - configurable mob target inactivity immunity
+    public int defaultMobTargetingMobImmunityFor = 20;
+    public int wolfTargetingSheepImmunityFor = 20;
+    public int wolfTargetingFoxImmunityFor = 20;
+    public int guardianTargetingSquidImmunityFor = 20;
+    public int llamaTargetingWolfImmunityFor = 20;
+    public int polarBearTargetingFoxImmunityFor = 20;
+    public int foxTargetingChickenImmunityFor = 20;
+    public int ocelotTargetingChickenImmunityFor = 20;
+    public int catTargetingRabbitImmunityFor = 20;
+    public int endermanTargetingEndermiteImmunityFor = 20;
+    public int piglinTargetingHoglinImmunityFor = 20;
+    public int piglinTargetingWitherSkeletonImmunityFor = 20;
+    public int witherSkeletonTargetingPiglinImmunityFor = 20;
+    public int witherSkeletonTargetingIronGolemImmunityFor = 20;
+    public int witherSkeletonTargetingSnowGolemImmunityFor = 20;
+    public int snowGolemTargetingNonPlayerImmunityFor = 20;
+    public int zoglinTargetingNonPlayerImmunityFor = 20;
+    public int axolotlTargetingFishImmunityFor = 20;
+    public int axolotlTargetingSquidImmunityFor = 20;
+    public int witchTargetingWitchImmunityFor = 20;
+    public int mobTargetingTurtleImmunityFor = 20;
+    // Martijn end - configurable mob target inactivity immunity
     private void activationRange()
     {
         boolean hasAnimalsConfig = config.getInt("entity-activation-range.animals", this.animalActivationRange) != this.animalActivationRange; // Paper
@@ -268,6 +299,33 @@ public class SpigotWorldConfig
         this.tickInactiveVillagers = this.getBoolean( "entity-activation-range.tick-inactive-villagers", this.tickInactiveVillagers );
         this.ignoreSpectatorActivation = this.getBoolean( "entity-activation-range.ignore-spectators", this.ignoreSpectatorActivation );
         this.log( "Entity Activation Range: An " + this.animalActivationRange + " / Mo " + this.monsterActivationRange + " / Ra " + this.raiderActivationRange + " / Mi " + this.miscActivationRange + " / Tiv " + this.tickInactiveVillagers + " / Isa " + this.ignoreSpectatorActivation );
+
+        this.babyImmunityFor = this.getInt("entity-activation-range.baby-immunity-for", this.babyImmunityFor); // Martijn - configurable baby inactivity immunity
+        this.areShearedSheepImmune = this.getBoolean("entity-activation-range.sheared-sheep-immunity", this.areShearedSheepImmune); // Martijn - configurable sheared sheep immunity
+        this.areNonSittingPetsImmune = this.getBoolean("entity-activation-range.non-sitting-pet-immunity", this.areNonSittingPetsImmune); // Martijn - configurable non-sitting pet immunity
+        // Martijn start - configurable mob target inactivity immunity
+        this.defaultMobTargetingMobImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.default", this.defaultMobTargetingMobImmunityFor);
+        this.wolfTargetingSheepImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.wolf-target-sheep", this.wolfTargetingSheepImmunityFor);
+        this.wolfTargetingFoxImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.wolf-target-fox", this.wolfTargetingFoxImmunityFor);
+        this.guardianTargetingSquidImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.guardian-target-squid", this.guardianTargetingSquidImmunityFor);
+        this.llamaTargetingWolfImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.llama-target-wolf", this.llamaTargetingWolfImmunityFor);
+        this.polarBearTargetingFoxImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.polar-bear-target-fox", this.polarBearTargetingFoxImmunityFor);
+        this.foxTargetingChickenImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.fox-target-chicken", this.foxTargetingChickenImmunityFor);
+        this.ocelotTargetingChickenImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.ocelot-target-chicken", this.ocelotTargetingChickenImmunityFor);
+        this.catTargetingRabbitImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.cat-target-rabbit", this.catTargetingRabbitImmunityFor);
+        this.endermanTargetingEndermiteImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.enderman-target-endermite", this.endermanTargetingEndermiteImmunityFor);
+        this.piglinTargetingHoglinImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.piglin-target-hoglin", this.piglinTargetingHoglinImmunityFor);
+        this.piglinTargetingWitherSkeletonImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.piglin-target-wither-skeleton", this.piglinTargetingWitherSkeletonImmunityFor);
+        this.witherSkeletonTargetingPiglinImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.wither-skeleton-target-piglin", this.witherSkeletonTargetingPiglinImmunityFor);
+        this.witherSkeletonTargetingIronGolemImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.wither-skeleton-target-iron-golem", this.witherSkeletonTargetingIronGolemImmunityFor);
+        this.witherSkeletonTargetingSnowGolemImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.wither-skeleton-target-snow-golem", this.witherSkeletonTargetingSnowGolemImmunityFor);
+        this.snowGolemTargetingNonPlayerImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.snow-golem-target-non-player", this.snowGolemTargetingNonPlayerImmunityFor);
+        this.zoglinTargetingNonPlayerImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.zoglin-target-non-player", this.zoglinTargetingNonPlayerImmunityFor);
+        this.axolotlTargetingFishImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.axolotl-target-fish", this.axolotlTargetingFishImmunityFor);
+        this.axolotlTargetingSquidImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.axolotl-target-squid", this.axolotlTargetingSquidImmunityFor);
+        this.witchTargetingWitchImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.witch-target-witch", this.witchTargetingWitchImmunityFor);
+        this.mobTargetingTurtleImmunityFor = this.getInt("entity-activation-range.mob-targeting-mob-immunity-for.mob-target-turtle", this.mobTargetingTurtleImmunityFor);
+        // Martijn end - configurable mob target inactivity immunity
     }
 
     public int playerTrackingRange = 48;
